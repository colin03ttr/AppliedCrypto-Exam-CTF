import subprocess
import base64
import string

def get_cipher(payload):
    result = subprocess.run(f'echo \'{payload}\' | nc 34.155.90.0 1338', capture_output=True, text=True, shell=True)
    output = result.stdout.strip().split('\n')
    if len(output) < 6:
        print("ERROR : output too short : ", output)
        return None
    cipher = output[5]
    #print(f"Payload: {payload}, Cipher: {cipher}")
    return cipher


def bruteforce():
    flag = list('????????????????????????')
    dict = string.printable
    done = 0
    while True:
        for i in dict:
            payload = 'OCC3 students\n  ' + flag[len(flag) - 1 - done] + i + 'x'*(15-done) + 'PPPPPPPPPPPPPP'
            print(f"Trying: {i}")
            cipher = get_cipher(payload)
            if cipher is None:
                continue
            if cipher[16:32] == cipher[112:128]:
                flag[len(flag) - 1 - done] = i
                done += 1
                print(f"FOUND: {i}")
                break
        print(f"Current flag: {''.join(flag)}")
        break

bruteforce()